#!/usr/bin/env bash
set -eo pipefail

# Set environment variables with defaults
container_mode=${CONTAINER_MODE:-"http"}
running_migrations_and_seeders=${RUNNING_MIGRATIONS_AND_SEEDERS:-"false"}
artisan_cache=${ARTISAN_CACHE:-"true"}

# Log startup information with enhanced logging
log() {
    local message="$1"
    /usr/local/bin/logger.sh CONTAINER "$message"
}

# Log startup information
log "Starting container in $container_mode mode"
log "Running migrations and seeders: $running_migrations_and_seeders"
log "Using artisan cache: $artisan_cache"

initialStuff() {
    log "Running initialization tasks..."
    
    if [ "${artisan_cache}" = "true" ]; then
        log "Clearing and rebuilding cache..."
        php artisan optimize:clear 2>&1 | while read -r line; do log "$line"; done
        php artisan event:cache 2>&1 | while read -r line; do log "$line"; done
        php artisan config:cache 2>&1 | while read -r line; do log "$line"; done
        php artisan route:cache 2>&1 | while read -r line; do log "$line"; done
        log "Cache operations completed"
    fi
    
    if [ "${running_migrations_and_seeders}" = "true" ]; then
        log "Running migrations and seeding database..."
        php artisan migrate --isolated --seed --force 2>&1 | while read -r line; do log "$line"; done
        log "Database operations completed"
    fi
}

# Always run initialization and s6 init
initialStuff

# Let s6 take over service management
exec /init
