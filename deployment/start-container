#!/usr/bin/env bash
set -eo pipefail

# Set environment variables with defaults
container_mode=${CONTAINER_MODE:-"http"}
running_migrations_and_seeders=${RUNNING_MIGRATIONS_AND_SEEDERS:-"false"}
artisan_cache=${ARTISAN_CACHE:-"true"}

# Log startup information
echo "🚀 Starting container in $container_mode mode"
echo "🗄️ Running migrations and seeders: $running_migrations_and_seeders"
echo "📦 Using artisan cache: $artisan_cache"

initialStuff() {
    echo "📋 Running initialization tasks..."
    
    # Check PHP installation and display version
    echo "🔍 PHP version check:"
    php --version || echo "⚠️ Warning: PHP version check failed"
    
    if [ "${artisan_cache}" = "true" ]; then
        echo "🧹 Clearing and rebuilding cache..."
        php artisan optimize:clear
        php artisan event:cache
        php artisan config:cache
        php artisan route:cache
        echo "✅ Cache operations completed"
    fi

    if [ "${running_migrations_and_seeders}" = "true" ]; then
        echo "🗄️ Running migrations and seeding database..."
        php artisan migrate --isolated --seed --force
        echo "✅ Database operations completed"
    fi
    
    # Check for storage directory permissions
    for dir in storage/framework/cache storage/framework/sessions storage/framework/views storage/logs bootstrap/cache; do
        if [ ! -d "$dir" ]; then
            echo "📁 Creating directory: $dir"
            mkdir -p "$dir"
        fi
        echo "🔐 Setting permissions for $dir"
        chmod -R 755 "$dir"
        touch "$dir/.keep"
    done
}

# Always run initialization and s6 init
initialStuff
# Let s6 take over service management
exec /init
