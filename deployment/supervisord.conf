[supervisord]
nodaemon=true
user=root
logfile=/proc/self/fd/1
logfile_maxbytes=0
loglevel=info
pidfile=/var/run/supervisord.pid
directory=/tmp
serverurl=unix:///var/run/supervisor.sock
minfds=1024
minprocs=200
umask=022
strip_ansi=false
environment=PYTHONUNBUFFERED=1

[include]
files=/etc/supervisor/conf.d/*.conf

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700
chown=root:root
username = dummy
password = dummy

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock
username = dummy
password = dummy
history_file=/tmp/supervisor_history

[rpcinterface:supervisor]
supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface

[eventlistener:stdout]
command=supervisor_stdout
buffer_size=100
events=PROCESS_LOG
result_handler=supervisor_stdout:event_handler

[eventlistener:process-monitor]
command=python -c "import sys; import supervisor.childutils; while True: supervisor.childutils.listener.ready(); headers, payload = supervisor.childutils.listener.wait(); supervisor.childutils.listener.ok(); print('SUPERVISOR EVENT: ' + payload, file=sys.stderr)"
events=PROCESS_STATE_FATAL,PROCESS_STATE_EXITED,PROCESS_STATE_STOPPED
stderr_logfile=/proc/self/fd/2
stderr_logfile_maxbytes=0
stdout_logfile=/proc/self/fd/1
stdout_logfile_maxbytes=0

[eventlistener:crashmail]
command=python -c "import sys, os; sys.stdout.write('READY\\n'); sys.stdout.flush(); while True: sys.stdout.write('RESULT 2\\nOK'); sys.stdout.flush(); line = sys.stdin.readline(); try: headers=dict([x.split(':') for x in line.split()]); event=headers['eventname']; print('PROCESS %s CRASHED: %s %s' % (headers.get('processname', '?'), headers.get('groupname', '?'), event), file=sys.stderr); sys.stderr.flush(); except: pass"
events=PROCESS_STATE_FATAL
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:ensure-dirs]
command=bash -c "mkdir -p /var/log/supervisor /var/run/supervisor && chmod -R 755 /var/log/supervisor /var/run/supervisor"
priority=1
startsecs=0
autostart=true
autorestart=false
stdout_logfile=/proc/self/fd/1
stderr_logfile=/proc/self/fd/2
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
