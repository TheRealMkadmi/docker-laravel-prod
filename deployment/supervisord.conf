[supervisord]
nodaemon=true
user=root
logfile=/dev/stdout
logfile_maxbytes=0
loglevel=info
pidfile=/var/run/supervisord.pid
childlogdir=/dev/stdout
serverurl=unix:///var/run/supervisor.sock
minfds=1024
minprocs=200
umask=022
strip_ansi=false
# Redirect crash information to log
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
# Capture process events
environment=PYTHONUNBUFFERED=1

[include]
files=/etc/supervisor/conf.d/*.conf

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700
chown=root:root
username = dummy
password = dummy

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock
username = dummy
password = dummy
# Keep history for debugging
history_file=/tmp/supervisor_history

[rpcinterface:supervisor]
supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface

# Capture supervisor events for 502 error diagnosis
[eventlistener:process-monitor]
command=python -m supervisor.scripts.console_scripts.supervisorctl tail -f octane nginx
events=PROCESS_STATE_FATAL,PROCESS_STATE_EXITED,PROCESS_STATE_STOPPED
result_handler=supervisor_stdout:event_handler
buffer_size=1024
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0

[eventlistener:stdout]
command=supervisor_stdout
buffer_size=1024
events=PROCESS_LOG
result_handler=supervisor_stdout:event_handler

# Capture process crash information
[eventlistener:crashmail]
command=python -c "import sys, os; sys.stdout.write('READY\\n'); sys.stdout.flush(); while True: sys.stdout.write('RESULT 2\\nOK'); sys.stdout.flush(); line = sys.stdin.readline(); try: headers=dict([x.split(':') for x in line.split()]); event=headers['eventname']; print('PROCESS %s CRASHED: %s %s' % (headers.get('processname', '?'), headers.get('groupname', '?'), event), file=sys.stderr); sys.stderr.flush(); except: pass"
events=PROCESS_STATE_FATAL
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
