[program:octane]
process_name=%(program_name)s_%(process_num)s
command=php %(ENV_ROOT)s/artisan octane:start --server=swoole --host=0.0.0.0 --port=8000 --workers=4 --task-workers=6 --max-requests=500 --watch
autostart=true
autorestart=true
startretries=10
startsecs=10
stopwaitsecs=30
stopasgroup=true
killasgroup=true
environment=LARAVEL_OCTANE="1"
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_maxbytes=0
stderr_maxbytes=0
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
redirect_stderr=true
# Logging enhancements
stopsignal=TERM
# Enable detailed log capture
stdout_capture_maxbytes=10MB
stderr_capture_maxbytes=10MB
# Add pre-stop script to log info on shutdown
# This logs the status right before a process stops
stopwaitsecs=20
# Improved exit code handling
exitcodes=0,2,70,78,127,134
priority=100

[program:horizon]
process_name=%(program_name)s_%(process_num)s
command=php %(ENV_ROOT)s/artisan horizon
autostart=%(ENV_WITH_HORIZON)s
autorestart=true
startretries=5
startsecs=5
stopwaitsecs=3600
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_maxbytes=0
stderr_maxbytes=0
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
redirect_stderr=true

[program:clear-scheduler-cache]
process_name=%(program_name)s_%(process_num)s
command=php %(ENV_ROOT)s/artisan schedule:clear-cache
autostart=%(ENV_WITH_SCHEDULER)s
autorestart=false
startsecs=0
startretries=2
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_maxbytes=0
stderr_maxbytes=0
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
redirect_stderr=true

[program:pulse-check]
process_name=%(program_name)s_%(process_num)s
command=php %(ENV_ROOT)s/artisan pulse:check
autostart=%(ENV_WITH_PULSE_CHECK)s
autorestart=false
startsecs=0
startretries=2
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_maxbytes=0
stderr_maxbytes=0
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
redirect_stderr=true

[program:pulse-work]
process_name=%(program_name)s_%(process_num)s
command=php %(ENV_ROOT)s/artisan pulse:work
autostart=%(ENV_WITH_PULSE_WORK)s
autorestart=true
startsecs=5
startretries=3
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_maxbytes=0
stderr_maxbytes=0
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
redirect_stderr=true

[program:schedule-run]
process_name=%(program_name)s_%(process_num)s
command=php %(ENV_ROOT)s/artisan schedule:work
autostart=%(ENV_WITH_ARTISAN_SCHEDULE)s
autorestart=true
startsecs=5
startretries=3
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_maxbytes=0
stderr_maxbytes=0
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
redirect_stderr=true

[program:reverb]
process_name=%(program_name)s_%(process_num)s
command=php %(ENV_ROOT)s/artisan reverb:start --host=127.0.0.1 --port=9000
autostart=%(ENV_WITH_REVERB)s
autorestart=true
startsecs=5
startretries=3
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_maxbytes=0
stderr_maxbytes=0
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
redirect_stderr=true

[program:nginx]
command=nginx -g 'daemon off;' -e stderr
autostart=true
autorestart=true
startretries=5
startsecs=5
stopwaitsecs=10
stopasgroup=true
killasgroup=true
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_maxbytes=0
stderr_maxbytes=0
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
redirect_stderr=true
# Logging enhancements
stopsignal=TERM
# Enable detailed log capture
stdout_capture_maxbytes=10MB
stderr_capture_maxbytes=10MB
# Improved exit code handling
exitcodes=0,1,2
priority=900

[eventlistener:process-monitor]
command=python -m supervisor.scripts.console_scripts.supervisorctl tail -f octane nginx
events=PROCESS_STATE_FATAL
autostart=true
autorestart=true

# Custom event listener for octane crashes
[eventlistener:octane-monitor]
command=python -c "import sys, os, time; sys.stdout.write('READY\\n'); sys.stdout.flush(); while True: sys.stdout.write('RESULT 2\\nOK'); sys.stdout.flush(); line = sys.stdin.readline(); print('EVENT: %s' % line.strip(), file=sys.stderr); if 'processname:octane' in line and ('FATAL' in line or 'EXITED' in line): print('CRITICAL ERROR: Octane crashed at %s - Check logs for 502 errors' % time.strftime('%Y-%m-%d %H:%M:%S'), file=sys.stderr); sys.stderr.flush();"
events=PROCESS_STATE_FATAL,PROCESS_STATE_EXITED
buffer_size=1024
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
